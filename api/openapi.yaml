openapi: 3.0.1
info:
  contact:
    email: developer-access@brex.com
    name: Admin
    url: https://brex.com
  description: |2

    The payments API allows you to initiate and manage payments and vendors from your Brex business accounts.
  title: Payments API
  version: "1.0"
  x-konfig-has-globally-required-security: true
servers:
- description: Production
  url: https://platform.brexapis.com
- description: "Staging (Note: This is not a sandbox. It will not work with customer\
    \ tokens.)"
  url: https://platform.staging.brexapps.com
security:
- OAuth2: []
tags:
- description: Endpoints to manage vendors
  name: Vendors
- description: "Endpoints to initiate transfers and view transfer statuses. Note that\
    \ for all transfer endpoints, the 'money' field is positive or unsigned for outgoing\
    \ transfers (debits), and negative for incoming transfers (credits)."
  name: Transfers
- description: Endpoint to view connected linked accounts
  name: Linked Accounts
paths:
  /v1/incoming_transfers:
    post:
      description: "\nThis endpoint creates a new incoming transfer. You may use use\
        \ any eligible bank account connection to fund (ACH Debit) \nany active Brex\
        \ business account.\n\n**Reminder**: You may not use the Brex API for any\
        \ activity that requires a license or registration from any \ngovernmental\
        \ authority without Brex's prior review and approval. This includes but is\
        \ not limited to any money services\nbusiness or money transmission activity.\n\
        \nPlease review the <a href=\"https://www.brex.com/legal/developer-portal/\"\
        >Brex Access Agreement</a> and contact us if \nyou have any questions.\n"
      operationId: Transfers_createIncomingTransfer
      parameters:
      - explode: false
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateIncomingTransferRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: createIncomingTransfer 200 response
      security:
      - OAuth2:
        - incoming_transfers
      summary: |2

        Create incoming transfer
      tags:
      - Transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-incoming_transfers
      x-content-type: application/json
      x-accepts: application/json
  /v1/linked_accounts:
    get:
      description: |2

        This endpoint lists all bank connections that are eligible to make ACH transfers to Brex business account
      operationId: LinkedAccounts_list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_BankConnection_'
          description: listLinkedAccounts 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - OAuth2:
        - linked_accounts.readonly
      summary: |2

        Lists linked accounts
      tags:
      - Linked Accounts
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-linked_accounts
      x-accepts: application/json
  /v1/transfers:
    get:
      description: |2

        This endpoint lists existing transfers for an account.

        Currently, the API can only return transfers for the following payment rails:
        - ACH
        - DOMESTIC_WIRE
        - CHEQUE
        - INTERNATIONAL_WIRE
      operationId: Transfers_list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_Transfer_'
          description: listTransfers 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error
      security:
      - OAuth2:
        - transfers.readonly
        - incoming_transfers
      summary: "\nLists transfers \n"
      tags:
      - Transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-transfers
      x-accepts: application/json
    post:
      description: "\nThis endpoint creates a new transfer.\n\nCurrently, the API\
        \ can only create transfers for the following payment rails:\n- ACH\n- DOMESTIC_WIRE\n\
        - CHEQUE\n- INTERNATIONAL_WIRES (For vendors already created through dashboard.\
        \ Rate limited to 100/day - Please reach out to developer-support@brex.com\
        \ if you need to do more)\n\n**Transaction Descriptions**\n* For outgoing\
        \ check payments, a successful transfer will return a response containing\
        \ a description value with a format of `Check #<check number> to <recipient_name>\
        \ - <external_memo>`.\n* For book transfers (from one Brex Business account\
        \ to another), the recipient value will have a format of `<customer_account.dba_name>\
        \ - <external_memo>` and the sender will have a format of `<target customer\
        \ account's dba name> - <external_memo>`.\n* For other payment rails, the\
        \ format will be `<counterparty_name> - <external_memo>`, where Counterparty\
        \ name is `payment_instrument.beneficiary_name` or `contact.name`\nFor vendors\
        \ created from the Payments API, the `counterparty_name` will be the `company_name`\
        \ [field](https://developer.brex.com/openapi/payments_api/).\n\n**Reminder**:\
        \ You may not use the Brex API for any activity that requires a license or\
        \ registration from any \ngovernmental authority without Brex's prior review\
        \ and approval. This includes but is not limited to any money services\nbusiness\
        \ or money transmission activity.\n\nPlease review the <a href=\"https://www.brex.com/legal/developer-portal/\"\
        >Brex Access Agreement</a> and contact us if \nyou have any questions.\n"
      operationId: Transfers_createTransfer
      parameters:
      - explode: false
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransferRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: createTransfer 200 response
      security:
      - OAuth2:
        - transfers
      summary: |2

        Create transfer
      tags:
      - Transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-transfers
      x-content-type: application/json
      x-accepts: application/json
  /v1/transfers/{id}:
    get:
      description: |2

        This endpoint gets a transfer by ID.

        Currently, the API can only return transfers for the following payment rails:
        - ACH
        - DOMESTIC_WIRE
        - CHEQUE
        - INTERNATIONAL_WIRE
      operationId: Transfers_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transfer'
          description: getTransfersById 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error
      security:
      - OAuth2:
        - transfers.readonly
        - incoming_transfers
      summary: |2

        Get transfer
      tags:
      - Transfers
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-transfers-id
      x-accepts: application/json
  /v1/vendors:
    get:
      description: |2

        This endpoint lists all existing vendors for an account.
        Takes an optional parameter to match by vendor name.
      operationId: Vendors_list
      parameters:
      - explode: true
        in: query
        name: cursor
        required: false
        schema:
          nullable: true
          type: string
        style: form
      - explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          nullable: true
          type: integer
        style: form
      - explode: true
        in: query
        name: name
        required: false
        schema:
          nullable: true
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page_VendorResponse_'
          description: listVendors 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - OAuth2:
        - vendors.readonly
      summary: "\nLists vendors \n"
      tags:
      - Vendors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-vendors
      x-accepts: application/json
    post:
      description: |2

        This endpoint creates a new vendor.
      operationId: Vendors_createNewVendor
      parameters:
      - explode: false
        in: header
        name: Idempotency-Key
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVendorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
          description: createVendor 200 response
      security:
      - OAuth2:
        - vendors
      summary: |2

        Create vendor
      tags:
      - Vendors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-post--v1-vendors
      x-content-type: application/json
      x-accepts: application/json
  /v1/vendors/{id}:
    delete:
      description: |2

        This endpoint deletes a vendor by ID.
      operationId: Vendors_deleteVendorById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: deleteVendor 200 response
      security:
      - OAuth2:
        - vendors
      summary: |2

        Delete vendor.
      tags:
      - Vendors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-delete--v1-vendors-id
      x-accepts: application/json
    get:
      description: |2

        This endpoint gets a vendor by ID.
      operationId: Vendors_getById
      parameters:
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
          description: getVendorById 200 response
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal server error
      security:
      - OAuth2:
        - vendors.readonly
      summary: |2

        Get vendor
      tags:
      - Vendors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-get--v1-vendors-id
      x-accepts: application/json
    put:
      description: |2

            Updates an existing vendor by ID.
      operationId: Vendors_updateById
      parameters:
      - explode: false
        in: header
        name: Idempotency-Key
        required: false
        schema:
          nullable: true
          type: string
        style: simple
      - explode: false
        in: path
        name: id
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVendorRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VendorResponse'
          description: updateVendor 200 response
      security:
      - OAuth2:
        - vendors
      summary: Update vendor
      tags:
      - Vendors
      x-konfig-operation-can-have-single-parameter: true
      x-konfig-single-parameter-schema: konfig-generated-schema-single-parameter-schema-put--v1-vendors-id
      x-content-type: application/json
      x-accepts: application/json
components:
  schemas:
    ACHDetailsRequest:
      allOf:
      - $ref: '#/components/schemas/PaymentAccountDetails'
      - $ref: '#/components/schemas/ACHDetailsRequest_allOf'
    ACHDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/PaymentAccountDetailsResponse'
      - $ref: '#/components/schemas/ACHDetailsResponse_allOf'
    AccountClass:
      enum:
      - BUSINESS
      - PERSONAL
      type: string
    AccountType:
      enum:
      - CHECKING
      - SAVING
      type: string
    Address:
      description: Company business address (must be in the US; no PO box or virtual/forwarding
        addresses allowed).
      properties:
        line1:
          description: "Address line 1, no PO Box."
          nullable: true
          type: string
        line2:
          description: "Address line 2 (e.g., apartment, suite, unit, or building)."
          nullable: true
          type: string
        city:
          description: "City, district, suburb, town, or village."
          nullable: true
          type: string
        state:
          description: "For US-addressed the 2-letter State abbreviation. For international-addresses\
            \ the county, providence, or region."
          nullable: true
          type: string
        country:
          description: Two-letter country code (ISO 3166-1 alpha-2).
          nullable: true
          type: string
        postal_code:
          description: ZIP or postal code.
          nullable: true
          type: string
        phone_number:
          description: Phone number.
          nullable: true
          type: string
      type: object
    ApprovalType:
      description: "Specifies the approval type for the transaction. \n`MANUAL` requires\
        \ a cash admin to approve the transaction before disbursing funds. \nWhen\
        \ not set, the default policy will apply."
      enum:
      - MANUAL
      type: string
    Balance:
      properties:
        amount:
          $ref: '#/components/schemas/Money'
        as_of_date:
          format: date
          type: string
      required:
      - amount
      - as_of_date
      type: object
    BankAccountDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/CounterPartyResponse'
      - $ref: '#/components/schemas/BankAccountDetailsResponse_allOf'
    BankConnection:
      example:
        bank_details:
          name: name
          type: null
        last_four: last_four
        current_balance: null
        id: id
        brex_account_id: brex_account_id
        available_balance: null
      properties:
        id:
          type: string
        bank_details:
          $ref: '#/components/schemas/BankDetails'
        brex_account_id:
          description: |
            Brex business account ID
          nullable: true
          type: string
        last_four:
          type: string
        available_balance:
          $ref: '#/components/schemas/BankConnection_available_balance'
        current_balance:
          $ref: '#/components/schemas/BankConnection_available_balance'
      required:
      - id
      - last_four
      type: object
    BankDetails:
      example:
        name: name
        type: null
      properties:
        name:
          description: |
            The name of the bank
          type: string
        type:
          $ref: '#/components/schemas/BankType'
      type: object
    BankType:
      enum:
      - CHECKING
      - SAVING
      type: string
    BeneficiaryBank:
      properties:
        name:
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/BeneficiaryBank_address'
      type: object
    BookTransferDetails:
      allOf:
      - $ref: '#/components/schemas/CounterParty'
      - $ref: '#/components/schemas/BookTransferDetails_allOf'
    BookTransferDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/CounterPartyResponse'
      - $ref: '#/components/schemas/BookTransferDetailsResponse_allOf'
    BrexCashAccountDetails:
      allOf:
      - $ref: '#/components/schemas/OriginatingAccount'
      - $ref: '#/components/schemas/BrexCashAccountDetails_allOf'
    BrexCashAccountDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/OriginatingAccountResponse'
      - $ref: '#/components/schemas/BrexCashAccountDetailsResponse_allOf'
    BrexCashDetails:
      allOf:
      - $ref: '#/components/schemas/ReceivingAccount'
      - $ref: '#/components/schemas/BrexCashDetails_allOf'
    ChequeDetailsRequest:
      allOf:
      - $ref: '#/components/schemas/PaymentAccountDetails'
      - $ref: '#/components/schemas/ChequeDetailsRequest_allOf'
    ChequeDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/PaymentAccountDetailsResponse'
      - $ref: '#/components/schemas/ChequeDetailsResponse_allOf'
    CounterParty: {}
    CounterPartyBankDetails:
      allOf:
      - $ref: '#/components/schemas/CounterPartyIncomingTransfer'
      - $ref: '#/components/schemas/CounterPartyBankDetails_allOf'
    CounterPartyIncomingTransfer: {}
    CounterPartyIncomingTransferType:
      enum:
      - BANK
      type: string
    CounterPartyResponse: {}
    CounterPartyResponseType:
      enum:
      - VENDOR
      - BOOK_TRANSFER
      - BANK_ACCOUNT
      type: string
    CounterPartyType:
      enum:
      - VENDOR
      - BOOK_TRANSFER
      type: string
    CreateIncomingTransferRequest:
      example:
        amount:
          amount: 0
          currency: currency
        description: description
        counterparty: ""
        receiving_account: ""
      properties:
        description:
          description: " \nDescription of the transfer for internal use. Not exposed\
            \ externally. \n"
          type: string
        counterparty: {}
        receiving_account: {}
        amount:
          $ref: '#/components/schemas/Money'
      required:
      - amount
      - counterparty
      - description
      - receiving_account
      type: object
    CreateTransferRequest:
      example:
        amount:
          amount: 0
          currency: currency
        approval_type: ""
        description: description
        counterparty: ""
        external_memo: external_memo
        originating_account: ""
      properties:
        description:
          description: Description of the transfer for internal use. Not exposed externally.
          type: string
        counterparty: {}
        amount:
          $ref: '#/components/schemas/Money'
        external_memo:
          description: "External memo for the transfer. `Payment Instructions` for\
            \ Wires and the `Entry Description` for ACH payments. \nMust be at most\
            \ 90 characters for `ACH` and `WIRE` transactions\nand at most 40 characters\
            \ for `CHEQUES`\n"
          maxLength: 90
          type: string
        originating_account:
          allOf:
          - $ref: '#/components/schemas/OriginatingAccount'
          - description: |
              Brex originating account details. Account IDs are returned by the /accounts
              endpoint. This endpoint currently only supports accounts with instrument type `CASH` (Brex business accounts)
              Currently only USD transfers are supported and amount should be positive
        approval_type:
          allOf:
          - $ref: '#/components/schemas/ApprovalType'
          - nullable: true
      required:
      - amount
      - counterparty
      - description
      - external_memo
      - originating_account
      type: object
    CreateVendorRequest:
      example:
        phone: phone
        company_name: company_name
        payment_accounts:
        - details: ""
        - details: ""
        email: email
      properties:
        company_name:
          description: Name for vendor. The name must be unique.
          type: string
        email:
          description: Email for vendor.
          format: email
          nullable: true
          type: string
        phone:
          description: Phone number for vendor.
          nullable: true
          type: string
        payment_accounts:
          description: Payment accounts associated with the vendor.
          items:
            $ref: '#/components/schemas/PaymentAccountRequest'
          nullable: true
          type: array
      required:
      - company_name
      type: object
    DomesticWireDetailsRequest:
      allOf:
      - $ref: '#/components/schemas/PaymentAccountDetails'
      - $ref: '#/components/schemas/DomesticWireDetailsRequest_allOf'
    DomesticWireDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/PaymentAccountDetailsResponse'
      - $ref: '#/components/schemas/DomesticWireDetailsResponse_allOf'
    InternationalWireDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/PaymentAccountDetailsResponse'
      - $ref: '#/components/schemas/InternationalWireDetailsResponse_allOf'
    Money:
      description: |2

        Money fields can be signed or unsigned. Fields are signed (an unsigned value will be interpreted as positive). The amount of money will be represented in the smallest denomination
        of the currency indicated. For example, USD 7.00 will be represented in cents with an amount of 700.
      example:
        amount: 0
        currency: currency
      properties:
        amount:
          description: "The amount of money, in the smallest denomination of the currency\
            \ indicated by currency. For example, when currency is USD, amount is\
            \ in cents."
          format: int64
          type: integer
        currency:
          description: "The type of currency, in ISO 4217 format. Default to USD if\
            \ not specified"
          nullable: true
          type: string
      type: object
    OriginatingAccount: {}
    OriginatingAccountResponse: {}
    OriginatingAccountResponseType:
      enum:
      - BREX_CASH
      type: string
    OriginatingAccountType:
      enum:
      - BREX_CASH
      type: string
    Page_BankConnection_:
      example:
        next_cursor: next_cursor
        items:
        - bank_details:
            name: name
            type: null
          last_four: last_four
          current_balance: null
          id: id
          brex_account_id: brex_account_id
          available_balance: null
        - bank_details:
            name: name
            type: null
          last_four: last_four
          current_balance: null
          id: id
          brex_account_id: brex_account_id
          available_balance: null
      properties:
        next_cursor:
          nullable: true
          type: string
        items:
          items:
            $ref: '#/components/schemas/BankConnection'
          type: array
      required:
      - items
      type: object
      x-konfig-is-used-in-successful-response: true
    Page_Transfer_:
      example:
        next_cursor: next_cursor
        items:
        - creator_user_id: creator_user_id
          amount:
            amount: 0
            currency: currency
          description: description
          created_at: 2000-01-23
          cancellation_reason: ""
          display_name: display_name
          external_memo: external_memo
          estimated_delivery_date: 2000-01-23
          payment_type: null
          process_date: 2000-01-23
          counterparty: ""
          id: id
          originating_account: ""
          status: null
        - creator_user_id: creator_user_id
          amount:
            amount: 0
            currency: currency
          description: description
          created_at: 2000-01-23
          cancellation_reason: ""
          display_name: display_name
          external_memo: external_memo
          estimated_delivery_date: 2000-01-23
          payment_type: null
          process_date: 2000-01-23
          counterparty: ""
          id: id
          originating_account: ""
          status: null
      properties:
        next_cursor:
          nullable: true
          type: string
        items:
          items:
            $ref: '#/components/schemas/Transfer'
          type: array
      required:
      - items
      type: object
      x-konfig-is-used-in-successful-response: true
    Page_VendorResponse_:
      example:
        next_cursor: next_cursor
        items:
        - phone: phone
          company_name: company_name
          payment_accounts:
          - details: ""
          - details: ""
          id: id
          email: email
        - phone: phone
          company_name: company_name
          payment_accounts:
          - details: ""
          - details: ""
          id: id
          email: email
      properties:
        next_cursor:
          nullable: true
          type: string
        items:
          items:
            $ref: '#/components/schemas/VendorResponse'
          type: array
      required:
      - items
      type: object
      x-konfig-is-used-in-successful-response: true
    PaymentAccountDetails: {}
    PaymentAccountDetailsResponse: {}
    PaymentAccountRequest:
      example:
        details: ""
      properties:
        details: {}
      required:
      - details
      type: object
    PaymentAccountResponse:
      example:
        details: ""
      properties:
        details: {}
      required:
      - details
      type: object
    PaymentDetailsTypeRequest:
      enum:
      - ACH
      - DOMESTIC_WIRE
      - CHEQUE
      type: string
    PaymentDetailsTypeResponse:
      enum:
      - ACH
      - DOMESTIC_WIRE
      - CHEQUE
      - INTERNATIONAL_WIRE
      type: string
    PaymentType:
      enum:
      - ACH
      - DOMESTIC_WIRE
      - CHEQUE
      - INTERNATIONAL_WIRE
      - BOOK_TRANSFER
      type: string
    ReceivingAccount: {}
    ReceivingAccountType:
      enum:
      - BREX_CASH
      type: string
    Recipient:
      properties:
        type:
          $ref: '#/components/schemas/RecipientType'
        id:
          type: string
      required:
      - id
      - type
      type: object
    RecipientType:
      description: "Specifies the type of the recipient. \n`ACCOUNT_ID` is the ID\
        \ of a Brex Business account.\n`PAYMENT_INSTRUMENT_ID` is the ID of Payment\
        \ Instrument of the receiving Brex account.\n"
      enum:
      - ACCOUNT_ID
      - PAYMENT_INSTRUMENT_ID
      type: string
    Transfer:
      example:
        creator_user_id: creator_user_id
        amount:
          amount: 0
          currency: currency
        description: description
        created_at: 2000-01-23
        cancellation_reason: ""
        display_name: display_name
        external_memo: external_memo
        estimated_delivery_date: 2000-01-23
        payment_type: null
        process_date: 2000-01-23
        counterparty: ""
        id: id
        originating_account: ""
        status: null
      properties:
        description:
          description: Description of the transfer
          nullable: true
          type: string
        id:
          description: Unique ID associated with the transfer
          type: string
        counterparty:
          allOf:
          - $ref: '#/components/schemas/CounterPartyResponse'
          - nullable: true
        payment_type:
          $ref: '#/components/schemas/PaymentType'
        amount:
          $ref: '#/components/schemas/Money'
        process_date:
          description: Transaction processing date
          format: date
          nullable: true
          type: string
        originating_account: {}
        status:
          $ref: '#/components/schemas/TransferStatus'
        cancellation_reason:
          allOf:
          - $ref: '#/components/schemas/TransferCancellationReason'
          - nullable: true
        estimated_delivery_date:
          description: Estimated delivery date for transfer
          format: date
          nullable: true
          type: string
        creator_user_id:
          description: User ID of the transfer initiator
          nullable: true
          type: string
        created_at:
          description: Date of transfer creation
          format: date
          nullable: true
          type: string
        display_name:
          description: Human readable name for the transaction
          nullable: true
          type: string
        external_memo:
          description: "External memo for the transfer. `Payment Instructions` for\
            \ Wires and the `Entry Description` for ACH payments. \nMust be at most\
            \ 90 characters for `ACH` and `WIRE` transactions\nand at most 40 characters\
            \ for `CHEQUES`\n"
          maxLength: 90
          nullable: true
          type: string
      required:
      - amount
      - id
      - originating_account
      - payment_type
      - status
      type: object
      x-konfig-is-used-in-successful-response: true
    TransferCancellationReason:
      description: |
        `USER_CANCELLED`: The transfer was canceled.
        `INSUFFICIENT_FUNDS`: The transfer could not be sent due to insufficient funds.
        `APPROVAL_DENIED`: The transfer was not sent because it was denied.
        `BLOCKED_BY_POSITIVE_PAY`: The transfer was blocked because of the ACH debit settings.
      enum:
      - USER_CANCELLED
      - INSUFFICIENT_FUNDS
      - APPROVAL_DENIED
      - BLOCKED_BY_POSITIVE_PAY
      type: string
    TransferStatus:
      description: |
        `PROCESSING`: We have started to process the sending or receiving of this transaction.
        `SCHEDULED`: The transaction is scheduled to enter the `PROCESSING` status.
        `PENDING_APPROVAL`: The transaction requires approval before it can enter the `SCHEDULED` or `PROCESSING` status.
        `FAILED`: A grouping of multiple terminal states that prevented the transaction from completing.
        This includes a a user-cancellation, approval being denied, insufficient funds, failed verifications, etc.
        `PROCESSED`: The money movement has been fully completed, which could mean money sent has arrived.
      enum:
      - PROCESSING
      - SCHEDULED
      - PENDING_APPROVAL
      - FAILED
      - PROCESSED
      type: string
    UpdateVendorRequest:
      example:
        beneficiary_name: beneficiary_name
        phone: phone
        company_name: company_name
        payment_accounts:
        - details: ""
        - details: ""
        email: email
      properties:
        company_name:
          description: Name for vendor
          nullable: true
          type: string
        email:
          description: Email for vendor
          format: email
          nullable: true
          type: string
        phone:
          description: Phone number for vendor
          nullable: true
          type: string
        payment_accounts:
          description: |
            To update payment instruments, we require the entire payload for each payment instrument that is being updated.
          items:
            $ref: '#/components/schemas/PaymentAccountRequest'
          nullable: true
          type: array
        beneficiary_name:
          description: Name for the Beneficiary
          nullable: true
          type: string
      type: object
    VendorDetails:
      allOf:
      - $ref: '#/components/schemas/CounterParty'
      - $ref: '#/components/schemas/VendorDetails_allOf'
    VendorDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/CounterPartyResponse'
      - $ref: '#/components/schemas/VendorDetailsResponse_allOf'
    VendorResponse:
      example:
        phone: phone
        company_name: company_name
        payment_accounts:
        - details: ""
        - details: ""
        id: id
        email: email
      properties:
        id:
          description: |
            Vendor ID: Can be passed to /transfers endpoint to specify counterparty.
          type: string
        company_name:
          nullable: true
          type: string
        email:
          nullable: true
          type: string
        phone:
          nullable: true
          type: string
        payment_accounts:
          items:
            $ref: '#/components/schemas/PaymentAccountResponse'
          nullable: true
          type: array
      required:
      - id
      type: object
      x-konfig-is-used-in-successful-response: true
    konfig-generated-schema-single-parameter-schema-post--v1-incoming_transfers:
      properties:
        Idempotency-Key:
          type: string
        description:
          description: " \nDescription of the transfer for internal use. Not exposed\
            \ externally. \n"
          type: string
        counterparty:
          $ref: '#/components/schemas/CounterPartyIncomingTransfer'
        receiving_account:
          $ref: '#/components/schemas/ReceivingAccount'
        amount:
          $ref: '#/components/schemas/Money'
      required:
      - Idempotency-Key
      - amount
      - counterparty
      - description
      - receiving_account
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Idempotency-Key
    konfig-generated-schema-single-parameter-schema-get--v1-linked_accounts:
      properties:
        cursor:
          nullable: true
          type: string
        limit:
          format: int32
          nullable: true
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cursor
      - limit
    konfig-generated-schema-single-parameter-schema-get--v1-transfers:
      properties:
        cursor:
          nullable: true
          type: string
        limit:
          format: int32
          nullable: true
          type: integer
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cursor
      - limit
    konfig-generated-schema-single-parameter-schema-post--v1-transfers:
      properties:
        Idempotency-Key:
          type: string
        description:
          description: Description of the transfer for internal use. Not exposed externally.
          type: string
        counterparty:
          $ref: '#/components/schemas/CounterParty'
        amount:
          $ref: '#/components/schemas/Money'
        external_memo:
          description: "External memo for the transfer. `Payment Instructions` for\
            \ Wires and the `Entry Description` for ACH payments. \nMust be at most\
            \ 90 characters for `ACH` and `WIRE` transactions\nand at most 40 characters\
            \ for `CHEQUES`\n"
          maxLength: 90
          type: string
        originating_account:
          allOf:
          - $ref: '#/components/schemas/OriginatingAccount'
          - description: |
              Brex originating account details. Account IDs are returned by the /accounts
              endpoint. This endpoint currently only supports accounts with instrument type `CASH` (Brex business accounts)
              Currently only USD transfers are supported and amount should be positive
        approval_type:
          allOf:
          - $ref: '#/components/schemas/ApprovalType'
          - nullable: true
      required:
      - Idempotency-Key
      - amount
      - counterparty
      - description
      - external_memo
      - originating_account
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Idempotency-Key
    konfig-generated-schema-single-parameter-schema-get--v1-transfers-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v1-vendors:
      properties:
        cursor:
          nullable: true
          type: string
        limit:
          format: int32
          nullable: true
          type: integer
        name:
          nullable: true
          type: string
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - cursor
      - limit
      - name
    konfig-generated-schema-single-parameter-schema-post--v1-vendors:
      properties:
        Idempotency-Key:
          type: string
        company_name:
          description: Name for vendor. The name must be unique.
          type: string
        email:
          description: Email for vendor.
          format: email
          nullable: true
          type: string
        phone:
          description: Phone number for vendor.
          nullable: true
          type: string
        payment_accounts:
          description: Payment accounts associated with the vendor.
          items:
            $ref: '#/components/schemas/PaymentAccountRequest'
          nullable: true
          type: array
      required:
      - Idempotency-Key
      - company_name
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Idempotency-Key
    konfig-generated-schema-single-parameter-schema-delete--v1-vendors-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-get--v1-vendors-id:
      properties:
        id:
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - id
    konfig-generated-schema-single-parameter-schema-put--v1-vendors-id:
      properties:
        Idempotency-Key:
          nullable: true
          type: string
        id:
          type: string
        company_name:
          description: Name for vendor
          nullable: true
          type: string
        email:
          description: Email for vendor
          format: email
          nullable: true
          type: string
        phone:
          description: Phone number for vendor
          nullable: true
          type: string
        payment_accounts:
          description: |
            To update payment instruments, we require the entire payload for each payment instrument that is being updated.
          items:
            $ref: '#/components/schemas/PaymentAccountRequest'
          nullable: true
          type: array
        beneficiary_name:
          description: Name for the Beneficiary
          nullable: true
          type: string
      required:
      - id
      type: object
      x-do-not-generate: true
      x-konfig-is-parameter:
      - Idempotency-Key
      - id
    ACHDetailsRequest_allOf:
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsTypeRequest'
        routing_number:
          description: The routing number must follow proper format.
          type: string
        account_number:
          type: string
        account_type:
          $ref: '#/components/schemas/AccountType'
        account_class:
          $ref: '#/components/schemas/AccountClass'
        beneficiary_name:
          nullable: true
          type: string
      required:
      - account_class
      - account_number
      - account_type
      - routing_number
      - type
      type: object
      example: null
    ACHDetailsResponse_allOf:
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsTypeResponse'
        payment_instrument_id:
          description: |
            Payment Instrument ID that can be passed to the /transfers endpoint to trigger a transfer.
            The type of the payment instrument dictates the method.
          type: string
        routing_number:
          type: string
        account_number:
          type: string
        account_type:
          allOf:
          - $ref: '#/components/schemas/AccountType'
          - nullable: true
        account_class:
          allOf:
          - $ref: '#/components/schemas/AccountClass'
          - nullable: true
      required:
      - account_number
      - payment_instrument_id
      - routing_number
      - type
      type: object
      example: null
    BankAccountDetailsResponse_allOf:
      properties:
        description:
          description: Description of the transfer.
          nullable: true
          type: string
        type:
          $ref: '#/components/schemas/CounterPartyResponseType'
        routing_number:
          description: "Routing number of a bank account (or SWIFT/BIC code for international\
            \ transfer). For incoming cheques, this field might be null."
          nullable: true
          type: string
        account_number:
          description: "Account number of a bank account (or IBAN code for international\
            \ transfer). For incoming cheques, this field might be null."
          nullable: true
          type: string
        beneficiary_bank:
          allOf:
          - $ref: '#/components/schemas/BeneficiaryBank'
          - description: Beneficiary Bank information
            nullable: true
        fed_reference_number:
          description: Fed reference number for incoming wires
          nullable: true
          type: string
        external_memo:
          description: External Memo populated by the sender
          nullable: true
          type: string
      required:
      - type
      type: object
      example: null
    BankConnection_available_balance:
      allOf:
      - $ref: '#/components/schemas/Balance'
      - nullable: true
    BeneficiaryBank_address:
      allOf:
      - $ref: '#/components/schemas/Address'
      - nullable: true
    BookTransferDetails_allOf:
      properties:
        type:
          $ref: '#/components/schemas/CounterPartyType'
        recipient:
          $ref: '#/components/schemas/Recipient'
      required:
      - recipient
      - type
      type: object
      example: null
    BookTransferDetailsResponse_allOf:
      properties:
        type:
          $ref: '#/components/schemas/CounterPartyResponseType'
        deposit_account_id:
          description: "This feature is currently limited to certain customers, please\
            \ reach out if you are interested"
          type: string
      required:
      - deposit_account_id
      - type
      type: object
      example: null
    BrexCashAccountDetails_allOf:
      properties:
        type:
          $ref: '#/components/schemas/OriginatingAccountType'
        id:
          description: |2

            ID of the Brex Business account: Can be found from the `/accounts` endpoint
            where instrument type is `CASH`.
          type: string
      required:
      - id
      - type
      type: object
      example: null
    BrexCashAccountDetailsResponse_allOf:
      properties:
        type:
          $ref: '#/components/schemas/OriginatingAccountResponseType'
        id:
          description: |2

            ID of the Brex Business account.
          type: string
      required:
      - id
      - type
      type: object
      example: null
    BrexCashDetails_allOf:
      properties:
        type:
          $ref: '#/components/schemas/ReceivingAccountType'
        id:
          description: |2

            ID of the Brex business account: Can be found from the [List business accounts](https://developer.brex.com/openapi/payments_api/) endpoint
          type: string
      required:
      - id
      - type
      type: object
      example: null
    ChequeDetailsRequest_allOf:
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsTypeRequest'
        mailing_address:
          $ref: '#/components/schemas/Address'
        recipient_name:
          maxLength: 40
          type: string
        beneficiary_name:
          nullable: true
          type: string
      required:
      - mailing_address
      - recipient_name
      - type
      type: object
      example: null
    ChequeDetailsResponse_allOf:
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsTypeResponse'
        payment_instrument_id:
          description: |
            Payment Instrument ID that can be passed to the /transfers endpoint to trigger a transfer.
            The type of the payment instrument dictates the method.
          type: string
        mailing_address:
          $ref: '#/components/schemas/Address'
        recipient_name:
          type: string
      required:
      - mailing_address
      - payment_instrument_id
      - recipient_name
      - type
      type: object
      example: null
    CounterPartyBankDetails_allOf:
      properties:
        type:
          $ref: '#/components/schemas/CounterPartyIncomingTransferType'
        id:
          description: |2

            The financial account id: Can be found from the [List linked accounts](https://developer.brex.com/openapi/payments_api/) endpoint
          type: string
      required:
      - id
      - type
      type: object
      example: null
    DomesticWireDetailsRequest_allOf:
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsTypeRequest'
        routing_number:
          description: The routing number must follow proper format.
          type: string
        account_number:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        beneficiary_name:
          nullable: true
          type: string
      required:
      - account_number
      - address
      - routing_number
      - type
      type: object
      example: null
    DomesticWireDetailsResponse_allOf:
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsTypeResponse'
        payment_instrument_id:
          description: |
            Payment Instrument ID that can be passed to the /transfers endpoint to trigger a transfer.
            The type of the payment instrument dictates the method.
          type: string
        routing_number:
          type: string
        account_number:
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
      - account_number
      - address
      - payment_instrument_id
      - routing_number
      - type
      type: object
      example: null
    InternationalWireDetailsResponse_allOf:
      properties:
        type:
          $ref: '#/components/schemas/PaymentDetailsTypeResponse'
        payment_instrument_id:
          description: |
            Payment Instrument ID that can be passed to the /transfers endpoint to trigger a transfer.
            The type of the payment instrument dictates the method.
          type: string
        swift_code:
          description: Counterparty's `SWIFT` code
          type: string
        iban:
          description: Counterparty's international bank account number
          type: string
        beneficiary_bank_name:
          description: Name of counterparty's bank
          nullable: true
          type: string
        address:
          $ref: '#/components/schemas/Address'
      required:
      - address
      - iban
      - payment_instrument_id
      - swift_code
      - type
      type: object
      example: null
    VendorDetails_allOf:
      properties:
        type:
          $ref: '#/components/schemas/CounterPartyType'
        payment_instrument_id:
          description: "ID of the vendor's payment instrument: this will dictate the\
            \ payment method and the\ncounterparty of the transaction.\nThe payment\
            \ instrument ID is returned from the /vendors response and the type of\
            \ the\ninstrument will dictate the payment method.\neg. Passing an instrument\
            \ ID of type ACH will trigger an ACH payment to the associated vendor.\n\
            Since a payment instrument can be updated while retaining the same payment_instrument_id,\
            \ \nplease make sure to double check the details.\n"
          type: string
      required:
      - payment_instrument_id
      - type
      type: object
      example: null
    VendorDetailsResponse_allOf:
      properties:
        type:
          $ref: '#/components/schemas/CounterPartyResponseType'
        payment_instrument_id:
          type: string
        id:
          description: Vendor ID returned from `/vendors` endpoint
          type: string
        routing_number:
          description: Routing number of a bank account (or SWIFT/BIC code for international
            transfer).
          nullable: true
          type: string
        account_number:
          description: Account number of a bank account (or IBAN code for international
            transfer).
          nullable: true
          type: string
      required:
      - id
      - payment_instrument_id
      - type
      type: object
      example: null
  securitySchemes:
    OAuth2:
      description: OAuth2 security scheme
      flows:
        authorizationCode:
          authorizationUrl: https://accounts-api.brex.com/oauth2/default/v1/authorize
          scopes:
            openid: openid
            offline_access: offline access
            vendors: View and manage vendor data
            vendors.readonly: View vendor data
            transfers: View and manage transfer data
            transfers.readonly: View transfer data
            incoming_transfers: View and manage incoming transfer data
            linked_accounts.readonly: View linked accounts
          tokenUrl: https://accounts-api.brex.com/oauth2/default/v1/token
      type: oauth2
      x-konfig-globally-required-security: true
x-explorer-enabled: false

