/*
 * Payments API
 *  The payments API allows you to initiate and manage payments and vendors from your Brex business accounts. 
 *
 * The version of the OpenAPI document: 1.0
 * Contact: developer-access@brex.com
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ApprovalType;
import com.konfigthis.client.model.CreateIncomingTransferRequest;
import com.konfigthis.client.model.CreateTransferRequest;
import com.konfigthis.client.model.Money;
import com.konfigthis.client.model.PageTransfer;
import com.konfigthis.client.model.Transfer;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransfersApi
 */
@Disabled
public class TransfersApiTest {

    private static TransfersApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TransfersApi(apiClient);
    }

    /**
     *  Create incoming transfer 
     *
     *  This endpoint creates a new incoming transfer. You may use use any eligible bank account connection to fund (ACH Debit)  any active Brex business account.  **Reminder**: You may not use the Brex API for any activity that requires a license or registration from any  governmental authority without Brex&#39;s prior review and approval. This includes but is not limited to any money services business or money transmission activity.  Please review the &lt;a href&#x3D;\&quot;https://www.brex.com/legal/developer-portal/\&quot;&gt;Brex Access Agreement&lt;/a&gt; and contact us if  you have any questions. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createIncomingTransferTest() throws ApiException {
        String description = null;
        Object counterparty = null;
        Object receivingAccount = null;
        Money amount = null;
        String idempotencyKey = null;
        Transfer response = api.createIncomingTransfer(description, counterparty, receivingAccount, amount, idempotencyKey)
                .execute();
        // TODO: test validations
    }

    /**
     *  Create transfer 
     *
     *  This endpoint creates a new transfer.  Currently, the API can only create transfers for the following payment rails: - ACH - DOMESTIC_WIRE - CHEQUE - INTERNATIONAL_WIRES (For vendors already created through dashboard. Rate limited to 100/day - Please reach out to developer-support@brex.com if you need to do more)  **Transaction Descriptions** * For outgoing check payments, a successful transfer will return a response containing a description value with a format of &#x60;Check #&lt;check number&gt; to &lt;recipient_name&gt; - &lt;external_memo&gt;&#x60;. * For book transfers (from one Brex Business account to another), the recipient value will have a format of &#x60;&lt;customer_account.dba_name&gt; - &lt;external_memo&gt;&#x60; and the sender will have a format of &#x60;&lt;target customer account&#39;s dba name&gt; - &lt;external_memo&gt;&#x60;. * For other payment rails, the format will be &#x60;&lt;counterparty_name&gt; - &lt;external_memo&gt;&#x60;, where Counterparty name is &#x60;payment_instrument.beneficiary_name&#x60; or &#x60;contact.name&#x60; For vendors created from the Payments API, the &#x60;counterparty_name&#x60; will be the &#x60;company_name&#x60; [field](https://developer.brex.com/openapi/payments_api/).  **Reminder**: You may not use the Brex API for any activity that requires a license or registration from any  governmental authority without Brex&#39;s prior review and approval. This includes but is not limited to any money services business or money transmission activity.  Please review the &lt;a href&#x3D;\&quot;https://www.brex.com/legal/developer-portal/\&quot;&gt;Brex Access Agreement&lt;/a&gt; and contact us if  you have any questions. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createTransferTest() throws ApiException {
        String description = null;
        Object counterparty = null;
        Money amount = null;
        String externalMemo = null;
        Object originatingAccount = null;
        String idempotencyKey = null;
        ApprovalType approvalType = null;
        Transfer response = api.createTransfer(description, counterparty, amount, externalMemo, originatingAccount, idempotencyKey)
                .approvalType(approvalType)
                .execute();
        // TODO: test validations
    }

    /**
     *  Get transfer 
     *
     *  This endpoint gets a transfer by ID.  Currently, the API can only return transfers for the following payment rails: - ACH - DOMESTIC_WIRE - CHEQUE - INTERNATIONAL_WIRE 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getByIdTest() throws ApiException {
        String id = null;
        Transfer response = api.getById(id)
                .execute();
        // TODO: test validations
    }

    /**
     *  Lists transfers  
     *
     *  This endpoint lists existing transfers for an account.  Currently, the API can only return transfers for the following payment rails: - ACH - DOMESTIC_WIRE - CHEQUE - INTERNATIONAL_WIRE 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTest() throws ApiException {
        String cursor = null;
        Integer limit = null;
        PageTransfer response = api.list()
                .cursor(cursor)
                .limit(limit)
                .execute();
        // TODO: test validations
    }

}
